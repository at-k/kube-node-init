{{- $root := . -}}
{{- range $name, $secret := .Values.secrets -}}
{{- if $secret.enabled }}

{{- if not (empty $secret.env) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "node-init.env.fullname" (list $root $name) }}
{{- with $secret.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
  labels:
{{ include "common.labels.standard" $root | indent 4 }}
    component: env
{{- with $secret.labels }}
{{ toYaml .| indent 4 }}
{{- end }}
type: Opaque
data:
{{- range $name, $value := $secret.env }}
{{- if not (empty $value) }}
  {{ $name }}: {{ $value | b64enc }}
{{- end }}
{{- end }}
{{- end }}

{{- if or (not (empty $secret.files)) (not (empty $secret.templates)) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "node-init.files.fullname" (list $root $name) }}
{{- with $secret.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
  labels:
{{ include "common.labels.standard" $root | indent 4 }}
    component: files
{{- with $secret.labels }}
{{ toYaml .| indent 4 }}
{{- end }}
type: Opaque
data:
{{- range $key, $value := $secret.files }}
{{- if kindIs "map" $value }}
  {{ $key  }}: {{ regexReplaceAll "(\\s+\\w+:\\s+)\\\\(\\!\\w+)" ( toYaml $value ) "${1}${2}" | b64enc }}
{{- else }}
  {{ $key  }}: {{ $value | b64enc }}
{{- end }}
{{- end }}

{{- range $key, $value := $secret.templates }}
  {{ $key  }}: |
{{ tpl $value $ | indent 4 }}
{{- end }}

{{- end }}

{{- end }}
{{- end -}}
